###############################################################################
# Â© Copyright IBM Corporation 2020, 2021
###############################################################################

- hosts: zos_host
  collections:
    - ibm.ibm_zos_core
  gather_facts: false
  environment: "{{ environment_vars }}"
  vars:
    owner_id: "{{ owner_id_survey | default('IBMUSER') }}"
    cert_label: "{{ cert_label_survey | default('TESTSITE') }}"
    sign_label: "{{ sign_label_survey | default('TEST CA') }}"
    ou: "{{ ou_survey | default('ANSIBLE CORE') }}"
    cn: "{{ cn_survey }}"
    country: "{{ country_survey | default('US') }}"
    expiry_date: "{{ expiry_date_survey | default('') }}"
    keyring: "{{ keyring_survey | default('SharedRing1') }}"
    check_name: "{{ check_name_survey | default('IBMRACF,RACF_CERTIFICATE_EXPIRATION') }}"

  tasks:
    - name: Check if keyring already exists and create it if it doesn't.
      block:
        - name: Check if keyring to be created already exists.
          ibm.ibm_zos_core.zos_tso_command:
            commands:
              - RACDCERT LISTRING({{ keyring }}) ID({{ owner_id }})
          register: keyring_check
          failed_when: false
          changed_when: false

        - name: Create a new keyring via TSO commands, skip if it already exists.
          ibm.ibm_zos_core.zos_tso_command:
            commands:
              - RACDCERT ADDRING({{ keyring }}) ID({{ owner_id }})
              - RACDCERT LISTRING({{ keyring }}) ID({{ owner_id }})
          when: "'IRRD114I Ring ' + keyring + ' does not exist.' in keyring_check.output[0].content[0]"

    - name: Get FQDN of this z/OS server from USS, if cn is undefined.
      ansible.builtin.command: hostname
      when: cn is undefined
      changed_when: false
      register: get_hostname

    - name: Set cn fact from previous task, if cn is undefined.
      ansible.builtin.set_fact:
        cn: "{{ get_hostname.stdout }}"
      when: cn is undefined

    - name: Check if certificate already exists and create it if it doesn't.
      block:
        - name: 'Check if cert to be created already exists.'
          ibm.ibm_zos_core.zos_tso_command:
            commands: "RACDCERT SITE LIST(LABEL('{{ cert_label }}'))"
          register: list_cert
          failed_when: false
          changed_when: false

        - name: Create new SITE cert and connect to keyring.
          ibm.ibm_zos_core.zos_tso_command:
            commands:
              - RACDCERT GENCERT SITE SUBJECTSDN(CN('{{ cn }}') OU('{{ ou }}') C('{{ country }}')) WITHLABEL('{{ cert_label }}') SIGNWITH(CERTAUTH LABEL('{{ sign_label }}')) {{ 'NOTAFTER(DATE(' + expiry_date + '))' if expiry_date != '' else '' }}
              - RACDCERT LISTCHAIN (LABEL('{{ cert_label }}')) SITE
              - RACDCERT ID({{ owner_id }}) CONNECT(SITE LABEL('{{ cert_label }}') RING({{ keyring }}) DEFAULT USAGE(PERSONAL))
              - RACDCERT LISTRING({{ keyring }}) ID({{ owner_id }})
          when: "'Digital certificate information for' not in list_cert.output[0].content[0]"

    - name: Stop TN3270 server.
      ibm.ibm_zos_core.zos_operator:
        cmd: 'p TN3270'

    - name: Start TN3270 server
      ibm.ibm_zos_core.zos_operator:
        cmd: 's TN3270'

    - name: Run Health Checker via operator command.
      ibm.ibm_zos_core.zos_operator:
        cmd: "F HZSPROC,RUN,CHECK=({{ check_name }})"
      changed_when: false
