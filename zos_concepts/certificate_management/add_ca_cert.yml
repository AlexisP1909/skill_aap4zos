---
- name: Add staged CA cert to RACF.
  hosts: zos_host
  gather_facts: false
  environment: "{{ environment_vars }}"
  tasks:

    - name: Copy certificate private key data into USS file.
      ibm.ibm_zos_core.zos_copy:
        content: "{{ zos_cert_key }}"
        dest: /u/ibmuser/zos_cert_private_key.pem
        mode: '600'

    - name: Create sequential data set with certificate content.
      ibm.ibm_zos_core.zos_copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest_name }}"
        force: true
        dest_data_set:
          type: SEQ
          record_format: VB
      loop:
        - { content: "{{ zos_ca_cert }}", dest_name: IBMUSER.COMMON.ZCACERT }
        - { content: "{{ zos_cert }}", dest_name: IBMUSER.COMMON.ZCERT }

    - name: Create target sequential data set with certificate content.
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ item }}"
        force: true
        type: SEQ
        record_format: VB
      loop:
        - IBMUSER.COMMON.ZCACERT.ENC
        - IBMUSER.COMMON.ZCERT.ENC

    - name: Ensure datasets are catalogued.
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ item }}"
        state: cataloged
        type: SEQ
        record_format: VB
      loop:
        - IBMUSER.COMMON.ZCACERT
        - IBMUSER.COMMON.ZCACERT.ENC
        - IBMUSER.COMMON.ZCERT
        - IBMUSER.COMMON.ZCERT.ENC

    - name: Convert dataset encoding from UTF-8 to IBM-1047 to another dataset.
      ibm.ibm_zos_core.zos_encode:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        encoding:
          from: UTF-8
          to: IBM-1047
      loop:
        - { src: IBMUSER.COMMON.ZCACERT, dest: IBMUSER.COMMON.ZCACERT.ENC }
        - { src: IBMUSER.COMMON.ZCERT, dest: IBMUSER.COMMON.ZCERT.ENC }

    - name: Add common_cacert data set to RACF.
      ibm.ibm_zos_core.zos_tso_command:
        command: "RACDCERT ADD('{{ item.data_set }}') CERTAUTH TRUST WITHLABEL('{{ item.label }}')"
      loop:
        - { data_set: IBMUSER.COMMON.ZCACERT.ENC, label: ZCACERT}
        - { data_set: IBMUSER.COMMON.ZCERT.ENC, label: ZCERT }

    # - name: Add common_cacert to keyring.
    #   ibm.ibm_zos_core.zos_tso_command:
    #     command: RACDCERT CONNECT CERTAUTH LABEL('ZCACERT') RING('SharedRing1') USAGE(CERTAUTH) ID(IBMUSER)

    # - name: Issue a SETROPTS REFRESH to initialize changes.
    #   ibm.ibm_zos_core.zos_tso_command:
    #     command: SETROPTS RACLIST(DIGTCERT, DIGTRING) REFRESH

    # - name: List cert, print results whether it exists or not.
    #   block:
    #     - name: List cert.
    #       ibm.ibm_zos_core.zos_tso_command:
    #         commands: RACDCERT CERTAUTH LIST(LABEL('ZCACERT'))
    #       register: list_cert
    #       changed_when: false

    #   always:
    #     - name: Print results from list cert command.
    #       ansible.builtin.debug:
    #         var: list_cert.output[0].content
