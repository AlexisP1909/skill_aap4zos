###############################################################################
# Â© Copyright IBM Corporation 2020, 2021
###############################################################################

- name: Search for expiring certificates and renew them.
  hosts: zos_host
  gather_facts: false
  environment: "{{ environment_vars }}"
  vars:
    cert_label: "{{ cert_label_survey }}"
    cert_type: "{{ cert_type_survey }}"
    sign_with: "{{ sign_with_survey | default(omit) }}"
    sign_label: "{{ sign_label_survey | default(' ') }}"
    owner_id: "{{ owner_id_survey }}"
    keyring_name: "{{ keyring_name_survey }}"

    cert_found: false
    today: ''

  tasks:
    - name: Create temporary directory to store bank files.
      ansible.builtin.tempfile:
        state: directory
      register: playbook_tmp_dir

    - name: Check if any certificates are expiring and renew them if necessary via TSO commands.
      vars:
        uss_file_path: '{{ playbook_tmp_dir.path }}'
      block:
        - name: Run health check via operator command.
          ibm.ibm_zos_core.zos_operator:
            cmd: "F HZSPROC,RUN,CHECK=(IBMRACF,RACF_CERTIFICATE_EXPIRATION)"
          changed_when: false

        - name: Grant user access using RACF.
          ibm.ibm_zos_core.zos_tso_command:
            cmd: PERMIT XFACILIT CLASS(FACILITY) ID(IBMUSER) ACCESS(READ)

        # - name: Add a facility to the RACLIST.
        #   ibm.ibm_zos_core.zos_tso_command:
        #     cmd: SETROPTS RACLIST(FACILITY) REFRESH

        - name: Submit job to run health check.
          ibm.ibm_zos_core.zos_job_submit:
            src: "{{ playbook_dir }}/templates/HZPRINT.jcl.j2"
            location: LOCAL
            wait_time_s: 60
          register: hc_job_output

        - name: Search report for {{ cert_label }}.
          ansible.builtin.set_fact:
            cert_found: true
          with_items: "{{ hc_job_output.jobs.0.ddnames }}"
          when: item.content is search(cert_label)

        - name: Print found expiring cert.
          ansible.builtin.debug:
            msg: "{{ cert_label }} expiring - {{ cert_found }}"

        - name: Get date.
          ansible.builtin.command: "date '+%b%d%y'"
          register: date_result
          when: cert_found
          changed_when: false

        - name: Set 'today' variable with output from previous task.
          ansible.builtin.set_fact:
            today: "{{ date_result.stdout }}"
          when: cert_found

        - name: Back up current certificate via TSO commands.
          ibm.ibm_zos_core.zos_tso_command:
            commands:
              - RACDCERT EXPORT(LABEL('{{ cert_label }}')) {{ 'ID(' + owner_id + ')' if cert_type == 'USER' else cert_type }} DSN('{{ owner_id }}.CERT.{{ cert_type }}.BACKUP.{{ today }}')
              - RACDCERT CHECKCERT('{{ owner_id }}.CERT.{{ cert_type }}.BACKUP.{{ today }}') {{ 'ID(' + owner_id + ')' if cert_type == 'USER' else '' }}
          when: cert_found

        - name: 'Rekey and Generate new cert request when not USER cert via TSO commands for {{ cert_type }}.'
          ibm.ibm_zos_core.zos_tso_command:
            commands:
              - RACDCERT {{ 'ID(' + owner_id + ')' if cert_type == 'USER' else cert_type }} REKEY(LABEL('{{ cert_label }}')) WITHLABEL('{{ cert_label }}-NEW')
              - RACDCERT {{ 'ID(' + owner_id + ')' if cert_type == 'USER' else cert_type }} LIST(LABEL('{{ cert_label }}-NEW'))
              - RACDCERT {{ 'ID(' + owner_id + ')' if cert_type == 'USER' else cert_type }} GENREQ (LABEL('{{ cert_label }}-NEW')) DSN('{{ owner_id }}.CSR.{{ cert_type }}.{{ today }}')
              - RACDCERT {{ 'ID(' + owner_id + ')' if cert_type == 'USER' else cert_type }} DELETE(LABEL('{{ cert_label }}'))
          when: cert_found

        - name: 'Install and connect local cert via TSO commands for {{ cert_type }}.'
          ibm.ibm_zos_core.zos_tso_command:
            commands:
              - RACDCERT {{ 'ID(' + owner_id + ')' if cert_type == 'USER' else cert_type }} GENCERT('{{ owner_id }}.CSR.{{ cert_type }}.{{ today }}') SIGNWITH({{ sign_with }} LABEL('{{ sign_label if sign_label != ' ' else cert_label + 'NEW' }}'))
              - RACDCERT {{ 'ID(' + owner_id + ')' if cert_type == 'USER' else cert_type }} ALTER(LABEL('{{ cert_label }}-NEW')) NEWLABEL('{{ cert_label }}')
              - RACDCERT ID({{ owner_id }}) CONNECT({{ cert_type }} LABEL('{{ cert_label }}') RING({{ keyring_name }}) DEFAULT USAGE(PERSONAL))
          when: cert_found

        - name: Run health check via operator command.
          ibm.ibm_zos_core.zos_operator:
            cmd: "F HZSPROC,RUN,CHECK=(IBMRACF,RACF_CERTIFICATE_EXPIRATION)"
          when: cert_found
          changed_when: false

      always:
        - name: Delete the temporary directory.
          ansible.builtin.file:
            path: "{{ playbook_tmp_dir.path }}"
            state: absent
