---
- hosts: zos_host
  collections:
    - ibm.ibm_zos_core
  gather_facts: false
  vars:
    job_name: "{{ job_name_survey }}"
    job_contents: "{{ job_contents_survey }}"
  environment: "{{ environment_vars }}"
  tasks:

    - name: Create temp file for JCL contents from survey.
      blockinfile:
        path: "{{ playbook_dir }}/files/{{ job_name }}.jcl"
        block: |
          "{{ job_contents }}"
        create: true
      delegate_to: localhost

    - name: Submit {{ job_name }} job.
      zos_job_submit:
        src: "{{ playbook_dir }}/files/{{ job_name }}.jcl"
        location: LOCAL
        wait_time_s: 60
        encoding:
          from: ISO8859-1
          to: IBM-037
      register: job_submit
      ignore_errors: true

    - name: Set fact with results from job submission.
      set_fact:
        job_results: "{{ job_submit }}"

    - name: Set facts used in this playbook based on results.
      set_fact:
        submit_job_name: "{{ job_results.jobs[0].job_name }}"
        submit_job_id: "{{ job_results.jobs[0].job_id }}"
        submit_jobs_ddnames_length: "{{ job_results.jobs[0].ddnames |length }}"
        submit_job_ddnames_list: "{{ job_results.jobs[0].ddnames }}"
        submit_job_list: "{{ job_results.jobs[0] }}"
        submit_job_ret_code: "{{ job_results.jobs[0].ret_code.code }}"
        submit_job_ret_code_msg: "{{ job_results.jobs[0].ret_code.msg }}"
        submit_job_subsystem: "{{ job_results.jobs[0].subsystem }}"

    - name: Print results for job {{ submit_job_name }}
      debug:
        msg:
          - Job name={{ submit_job_name }}
          - Subsystem={{ submit_job_subsystem }}
          - Job ID={{ submit_job_id }}
          - DD Count={{ submit_jobs_ddnames_length }}
          - "{{ submit_job_ddnames_list }}"
          - "{{ submit_job_list }}"
          - Return Code={{ submit_job_ret_code }}
          - Return Code Message={{ submit_job_ret_code_msg }}